apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "fullname" . }}-nginx-conf
  labels:
    app: {{ template "name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
data:
  nginx.conf: |
    server {
      include /etc/nginx/conf.d/variables.nginx.inc;
      include /etc/nginx/conf.d/listen_http.nginx.inc;
      include /etc/nginx/conf.d/base.nginx.inc;
    }
  variables.nginx.inc: |
    set $conf_nginx_root /usr/share/nginx/www/static;
    set $conf_nginx_node_port {{ .Values.service.nodePort }};
  listen_http.nginx.inc: |
    listen {{ .Values.service.internalPort }} default_server;
  listen_https.nginx.inc: |
    #For development only. Do not include it in k8s
    ssl_certificate     certs/prod/star.bizzabo.com.chain.crt;
    ssl_certificate_key certs/prod/star.bizzabo.com.key;
    listen 443 ssl;
    server_name {{ template "common.bizzabo.<%= serviceName %>.host" . }};
  base.nginx.inc: |
    proxy_buffer_size 64k;
    proxy_buffers 4 128k;
    proxy_busy_buffers_size 128k;

    try_files $uri $uri/ /index.html =404;

    set_real_ip_from  0.0.0.0/0;
    real_ip_header    X-Forwarded-For;

    location / {
        expires -1;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;

        proxy_pass http://127.0.0.1:$conf_nginx_node_port$request_uri;
        proxy_redirect off;
    }

    location /nginx_status {
      stub_status  on;
      access_log   off;
    }

    location = /health {
        access_log off;
        default_type text/plain;
        return 200 "OK";
    }

    location /_next/static {
        root $conf_nginx_root;
        rewrite ^/_next/static/(.*)$ /$1 break;
    }
