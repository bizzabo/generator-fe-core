version: 2
jobs:
  build:
    machine: true
    node:
      version: 8.11.3
    python:
      version: 2.7.10
    steps:
    - checkout
    - run:
        name: Clone Fabric
        command: 'git clone https://github.com/bizzabo/fabric.git'
    - run:
        name: Install Fabric Dependecies
        command: |
          sudo apt-get update
          sudo apt-get install python-dev
          sudo python -m pip install -U pip
    - run:
        name: Install Fabric Libs
        command: 'sudo pip install requests gdata boto python-jenkins fabric-slack-tools fabric==1.14.0 --upgrade --ignore-installed'
    - run:
        name: Authenticate with NPM registry
        command: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > .npmrc
    - restore_cache:
        key: dependency-cache-{{ checksum "package.json" }}
    - run:
        name: Install dependencies
        command: 'npm install'
    - save_cache:
        key: dependency-cache-{{ checksum "package.json" }}
        paths:
          - node_modules
    - run:
        name: Build project
        command: |
          npm run build
    - run:
        name: Build docker image
        command: |
          if [ "${CIRCLE_BRANCH}" == "master" ]; then
            fabric/circleci/docker_build_and_push.sh dist <%= serviceName %> $CIRCLE_BUILD_NUM "latest"
          else
            fabric/circleci/docker_build_and_push.sh dist <%= serviceName %> $CIRCLE_BUILD_NUM
          fi
    - run:
        name: Deploy Instructions
        environment:
          CIRCLE_ARTIFACTS: /tmp/artifacts
        command: |
          fabric/circleci/create_deploy_instructions.sh
          fabric/circleci/commit_message_actions.sh
    - store_artifacts:
        path: /tmp/artifacts
    - run:
        name: Clone Helm Assembly
        command: git clone https://github.com/bizzabo/helm-assembly.git
    - persist_to_workspace:
        root: .
        paths:
        - helm-assembly
        - fabric
  deployToQa:
    machine: true
    steps:
    - attach_workspace:
        at: /tmp/workspace
    - run:
        name: Deploy to QA
        command: |
          cd /tmp/workspace/helm-assembly
          ../fabric/circleci/deploy_to_qa_kubernetes.sh <%= serviceName %>
          sleep 180
workflows:
  version: 2
  build_and_test:
    jobs:
    - build
    - deployToQa:
        filters:
          branches:
            only: master
        requires:
        - build
